ahora vamos a revisar lo que es la interfaz.

Ya vemos en el index, que tenemos varios items, si nosotros tenemos mas de 5 elementos, no vamos a tener una paginado, asiq ue vamos a utilizar un paginado.

Necesitamos informaciÃ³n para poder crear, asi que vamos a hacer esta paginaciÃ³n de acuerdo a lo que nosotros consideremos pertinente.

Vamos a hacerlo con d3 tregistros-

Entonces en la vista index, lo que vamos a hacer es navegar, a traves del index.


en el GridView admquirimos informaciÃ³n y es informaciÃ³n se adquiere, utilizando ciertos parametros, entonces. Esos parametros tienen un DataProvider 

Es informaciÃ³n que realemnte llega, directamente de una base de datos, la configuraciÃ³n que se adquiere a traves de la bd, esta dada porl libros search que tiene todos los elementos necesarios para mostrar esa inforamciÃ³n.

Desde
    /models/LibroSearch.php

Entonces toda esa inforamciÃ³n que viene de el ActiveDataProvider que es el que, saca realemente la inforamciÃ³n.

Entonces para que no quede duda lo que se esta haciendo con unpaginado.

Vamos a ubicarnos en la lina donde dice ActiveDataProvider y ponemos simpelemnet lo que ponemos la paginaciÃ³n.

y ponemos un valor page que es el tamaÃ±o de registros por ejem. 2

Entonces vamos a actualiar con estemovimiento muy sencillo y dara el paginado.


      $dataProvider = new ActiveDataProvider([
            'query' => $query,
            'pagination'=>['pageSize'=>1]
        ]);


Se agrega la linea:        

    'pagination'=>['pageSize'=>1]

Para dar un resultado entre uno y otro.

simplemente se tienen dos registros, entonces la funcionalidad s muy sencilla y el Yii framework se encarga del paginado.




Estilos en la paginaciÃ³n:
-----------------------------


or defecto, Yii2 usa un paginador simple con HTML bÃ¡sico. Pero puedes estilizarlo fÃ¡cilmente con Bootstrap o incluso usar un paginador totalmente personalizado. ðŸŽ¨
âœ… OpciÃ³n 1: Usar Bootstrap 4/5 con LinkPager

Si ya estÃ¡s usando Bootstrap (como parte de tu layout o tema), puedes indicarle a Yii que el paginador use clases de Bootstrap.
Dentro de tu GridView::widget (en index.php):

Agrega o ajusta esta parte:

<?= GridView::widget([
    'dataProvider' => $dataProvider,
    'filterModel' => $searchModel,
    'pager' => [
        'class' => \yii\widgets\LinkPager::class,
        'options' => ['class' => 'pagination justify-content-center'], // clase Bootstrap
        'linkOptions' => ['class' => 'page-link'],
        'activePageCssClass' => 'active',
        'disabledPageCssClass' => 'disabled',
        'pageCssClass' => 'page-item',
        'prevPageLabel' => 'Â«',
        'nextPageLabel' => 'Â»',
    ],
    'columns' => [
        ['class' => 'yii\grid\SerialColumn'],
        'id',
        'titulo',
        [
            'format' =>'html',
            'value' => function($data){ return Html::img($data->imagen, ['width' => '60px']); },
        ],
        [
            'class' => ActionColumn::class,
            'urlCreator' => function ($action, Libro $model, $key, $index, $column) {
                return Url::toRoute([$action, 'id' => $model->id]);
            },
        ],
    ],
]); ?>

âœ… OpciÃ³n 2: Estilos personalizados con CSS

Si no estÃ¡s usando Bootstrap pero igual quieres que se vea bien, puedes agregar en tu vista o layout un bloque de estilos como este:

.pagination {
    display: flex;
    list-style: none;
    padding: 0;
    justify-content: center;
}

.page-item {
    margin: 0 4px;
}

.page-link {
    display: inline-block;
    padding: 6px 12px;
    background-color: #f8f9fa;
    border: 1px solid #dee2e6;
    border-radius: 4px;
    color: #007bff;
    text-decoration: none;
}

.page-item.active .page-link {
    background-color: #007bff;
    color: white;
    border-color: #007bff;
}

ðŸš€ Resultado

DespuÃ©s de esto, el paginador se verÃ¡ como botones estilizados, alineados, y con mejor apariencia visual â€” muy similar al paginador de Bootstrap que se usa en otros frameworks como Laravel o CodeIgniter.


Esto entonces modificamos de esto:


<?= GridView::widget([
        'dataProvider' => $dataProvider,
        'filterModel' => $searchModel,
        'columns' => [
            ['class' => 'yii\grid\SerialColumn'],

            'id',
            'titulo',
            [
                'format' =>'html',
                'value' => function($data){ return Html::img($data->imagen, ['width' => '60px']); },
        
        ],
            [
                'class' => ActionColumn::className(),
                'urlCreator' => function ($action, Libro $model, $key, $index, $column) {
                    return Url::toRoute([$action, 'id' => $model->id]);
                 }
            ],
        ],
    ]); ?>




A esto:


<?= GridView::widget([
    'dataProvider' => $dataProvider,
    'filterModel' => $searchModel,
    'pager' => [
        'class' => \yii\widgets\LinkPager::class,
        'options' => ['class' => 'pagination justify-content-center'], // clase Bootstrap
        'linkOptions' => ['class' => 'page-link'],
        'activePageCssClass' => 'active',
        'disabledPageCssClass' => 'disabled',
        'pageCssClass' => 'page-item',
        'prevPageLabel' => 'Â«',
        'nextPageLabel' => 'Â»',
    ],
    'columns' => [
        ['class' => 'yii\grid\SerialColumn'],
        'id',
        'titulo',
        [
            'format' =>'html',
            'value' => function($data){ return Html::img($data->imagen, ['width' => '60px']); },
        ],
        [
            'class' => ActionColumn::class,
            'urlCreator' => function ($action, Libro $model, $key, $index, $column) {
                return Url::toRoute([$action, 'id' => $model->id]);
            },
        ],
    ],
]); ?>


Este estilo hace que se tenga un detale visual, que ocurre por que 

 porque el paginador por defecto omite envolver el botÃ³n de navegaciÃ³n (Â«) en una etiqueta con clases CSS cuando estÃ¡ deshabilitado (por ejemplo, en la primera pÃ¡gina).

Cuando avanzas a la pÃ¡gina 2, el botÃ³n Â« (anterior) ya es funcional, y por eso se renderiza con las clases page-item y page-link de Bootstrap.
âœ… SoluciÃ³n: Forzar estilos de Bootstrap tambiÃ©n para botones deshabilitados

Debes asegurarte de que Yii aplique correctamente las clases a todos los elementos, incluso los deshabilitados. Para eso, puedes usar el siguiente ajuste en la configuraciÃ³n del pager:

'pager' => [
    'class' => \yii\widgets\LinkPager::class,
    'options' => ['class' => 'pagination justify-content-center'],
    'linkOptions' => ['class' => 'page-link'],
    'activePageCssClass' => 'active',
    'disabledPageCssClass' => 'disabled', // <- esta clase aplica al elemento <li> si estÃ¡ deshabilitado
    'pageCssClass' => 'page-item',
    'prevPageLabel' => 'Â«',
    'nextPageLabel' => 'Â»',
    'disabledListItemSubTagOptions' => ['tag' => 'a', 'class' => 'page-link'], // <- agrega clase a botÃ³n deshabilitado
],

ðŸ’¡ Â¿QuÃ© hace disabledListItemSubTagOptions?

Cuando el botÃ³n estÃ¡ desactivado (Â« en la primera pÃ¡gina o Â» en la Ãºltima), Yii genera algo como:

<li class="disabled"><span>Â«</span></li>

Con el cambio, lo forzamos a renderizar:

<li class="page-item disabled"><a class="page-link">Â«</a></li>

AsÃ­ mantiene el estilo de Bootstrap incluso en los botones inactivos.


Entonces se cambia el siguiente codigo:


'pager' => [
        'class' => \yii\widgets\LinkPager::class,
        'options' => ['class' => 'pagination justify-content-center'], // clase Bootstrap
        'linkOptions' => ['class' => 'page-link'],
        'activePageCssClass' => 'active',
        'disabledPageCssClass' => 'disabled',
        'pageCssClass' => 'page-item',
        'prevPageLabel' => 'Â«',
        'nextPageLabel' => 'Â»',
    ],


Se cambia a :

    'pager' => [
    'class' => \yii\widgets\LinkPager::class,
    'options' => ['class' => 'pagination justify-content-center'],
    'linkOptions' => ['class' => 'page-link'],
    'activePageCssClass' => 'active',
    'disabledPageCssClass' => 'disabled', // <- esta clase aplica al elemento <li> si estÃ¡ deshabilitado
    'pageCssClass' => 'page-item',
    'prevPageLabel' => 'Â«',
    'nextPageLabel' => 'Â»',
    'disabledListItemSubTagOptions' => ['tag' => 'a', 'class' => 'page-link'], // <- agrega clase a botÃ³n deshabilitado
],





Con esto se mostrara a que todo el gridview este completo.


