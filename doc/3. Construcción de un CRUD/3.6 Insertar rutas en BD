Al ya poder guardar los datos en la bd, tendremos que hacer validaciones.


Si vemos que el odelo llega, genera una validación y la validación es correcta, continua el prpoceso de subida. 

Despues de esto, el archivo puede que no exista

Establecesmos estas modificaiones


 if ($model->load($this->request->post()) ) {

                $model->archivo = UploadedFile::getInstance($model, 'archivo');

                //Validamos existencia del archivo
                if($model->validate()){
                    //Validacion de entrada
                    if($model->archivo){
                        //Pasamos la ruta del archivo y su nombre
                        $rutaArchivo = 'uploads/'.time()."_".$model->archivo->baseName.".".$model->archivo->extension;

                        //Validamos si el archivo esta adjunto, ya se logro guardar
                        if($model->archivo->saveAs($rutaArchivo)){

                            //Actualizamos la ruta del archivo
                            $model->imagen=$rutaArchivo;

                            
                        }

                    }
                }


                //Ahora vamos a asaber si se guardo
                if($model->save(false) ){
                    //se redirecciona si hubo un guardado, unicamente a index.
                    //Ya que index es la lista donde se muestran los libros
                    return $this->redirect(['index']);


                }

                
            }

Vamos a create para hacer una inserción


Por un lado en el metodo create, llamamos al metodo subir foto y verificamos si devuelve un arespuesta, si el modelo guarda exitosamente redirige hacia index.
Si no hubo envío de formulario (GET), se muestra el formulario


    public function actionCreate()
        {
            $model = new Libro();

            // Llamamos a subirFoto y verificamos si devuelve una respuesta (como redirect)
            /*
                Al enviar el formulario, se llama a subirFoto().
                Si el modelo se guarda exitosamente, redirige automáticamente a index.
                Si no se guarda (por ejemplo, error de validación), se muestra de nuevo el formulario.
            */
            $resultado = $this->subirFoto($model);

            // Si se retorna un resultado (como redirect), lo devolvemos
            if ($resultado !== null) {
                return $resultado;
            }

            // Si no hubo envío de formulario (GET), se muestra el formulario
            return $this->render('create', [
                'model' => $model,
            ]);
        }

Como desde el metodo Create invocamos al metodo subirFoto, en este metodo primero 

 Validamos los datos que esten llgenaod y despues hacemos un guardado, permitiendo generar el archivo dentro de la
      Carpeta uploads con el dato del archivo, ya que en le modelo archivo, 
      - Iniciamos con la carpeta 
      - Integramos el tiempo,
      - Nombe del archivo desde su nombre baseName el nombre del archivo original
      - punto y la extensión igual del model pero del archivo que nos esta dando
      
      Con esto estamos reescribiendo el nombre del archivo para evitar duplicaciones.

     Al guardar tenemos el parametro false para que no genere error.



  Validamos existencia del archivo, validamos la entrada de los datos del formulrio, Pasamos la ruta del archivo y su nombre, 

  Validamos si el archivo esta adjunto, ya se logro guardar, Actualizamos la ruta del archivo


  Posterior a estas validaciones y al presionar el boton de enviar datos desde el formulario
  se redirecciona si hubo un guardado, unicamente a index Ya que index es la lista donde se muestran los libros


  Tenemos aca el metodo de subirFoto:

          protected function subirFoto(Libro $model){

      /*
      Validamos los datos que esten llgenaod y despues hacemos un guardado, permitiendo generar el archivo dentro de la
      Carpeta uploads con el dato del archivo, ya que en le modelo archivo, 
      - Iniciamos con la carpeta 
      - Integramos el tiempo,
      - Nombe del archivo desde su nombre baseName el nombre del archivo original
      - punto y la extensión igual del model pero del archivo que nos esta dando
      
      Con esto estamos reescribiendo el nombre del archivo para evitar duplicaciones.

     Al guardar tenemos el parametro false para que no genere error.
      */

            if ($model->load($this->request->post()) ) {

                $model->archivo = UploadedFile::getInstance($model, 'archivo');

                //Validamos existencia del archivo
                if($model->validate()){
                    //Validacion de entrada
                    if($model->archivo){
                        //Pasamos la ruta del archivo y su nombre
                        $rutaArchivo = 'uploads/'.time()."_".$model->archivo->baseName.".".$model->archivo->extension;

                        //Validamos si el archivo esta adjunto, ya se logro guardar
                        if($model->archivo->saveAs($rutaArchivo)){

                            //Actualizamos la ruta del archivo
                            $model->imagen=$rutaArchivo;

                            
                        }

                    }
                }


                //Ahora vamos a asaber si se guardo
                if($model->save(false) ){
                    //se redirecciona si hubo un guardado, unicamente a index.
                    //Ya que index es la lista donde se muestran los libros
                    return $this->redirect(['index']);


                }

                //return $this->redirect(['view', 'id' => $model->id]);

                //En su lugar retornamos No hacer nada si no hay POST o falló el guardado
            return null;
            }
       
    }



Podremos si asi deseamos poder borrar las imagenes almacenadas o bien podriamos